package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexicoTiny;
import alex.UnidadLexica;
import errors.GestionErroresTiny;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private GestionErroresTiny errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErroresTiny();
   AnalizadorLexicoTiny alex = (AnalizadorLexicoTiny)getScanner();
   alex.fijaGestionErrores(errores);
:};


terminal     IDEN, ENT, MAS,
             MENOS, POR, DIV, IGUAL, COMA, PAP, PCIERRE, PRINT, LFILTER, LMAP, LREDUCE,
             DISTINTO, MAYOR, MENOR, IGUALIGUAL, CONCAT, CORCHETEABRE, CORCHETECIERRA;

non terminal  P, Inst, Lista, TLista, NLista, RLista, CLista, ResultadoOp, ResFilter, 
			  ResMap, ResReduce, Comp, Arit;


P ::= Inst P | ;
Inst ::= IDEN IGUAL Lista | PRINT Lista ;
Lista ::= TLista CONCAT Lista | TLista ;
TLista ::= CORCHETEABRE CLista CORCHETECIERRA | ResultadoOp | IDEN;
CLista ::= NLista RLista | ;
RLista ::= COMA NLista RLista|  ;
NLista ::= ENT | Lista ;
ResultadoOp ::= ResFilter | ResMap | ResReduce ;
ResFilter ::= LFILTER Comp  ENT TLista | LFILTER Comp ENT PAP Lista PCIERRE ;
ResMap ::= LMAP Arit ENT TLista | LMAP Arit ENT PAP Lista PCIERRE ;
ResReduce ::= LREDUCE Arit TLista | LREDUCE Arit PAP Lista PCIERRE ;
Comp ::= MAYOR | MENOR | IGUALIGUAL | DISTINTO;
Arit ::= MAS | MENOS | POR | DIV;

